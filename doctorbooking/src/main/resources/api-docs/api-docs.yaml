openapi: 3.0.1
info:
  title: My API
  description: This is a sample Spring Boot RESTful service using springdoc-openapi
    and OpenAPI 3.
  version: "1.0"
servers:
- url: http://localhost:8089
  description: Generated server url
paths:
  /appointments/{appointmentId}/status:
    put:
      tags:
      - doctor-appointments-controller
      operationId: updateAppointmentStatus
      parameters:
      - name: appointmentId
        in: path
        required: true
        schema:
          type: string
      - name: status
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Appointment"
  /appointments:
    get:
      tags:
      - doctor-appointments-controller
      operationId: getAllDoctorsAppointments
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Appointment"
    post:
      tags:
      - book-appointment-controller
      operationId: bookAppointment
      parameters:
      - name: request
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/BookAppointmentRequest"
      responses:
        "200":
          description: OK
  /api/doctors/slots:
    get:
      tags:
      - slots-availability-controller
      operationId: getAllSlots
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SlotDTO"
    post:
      tags:
      - slots-availability-controller
      operationId: createSlot
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SlotDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /slots:
    get:
      tags:
      - get-available-slots-controller
      operationId: getAvailableSlots
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
components:
  schemas:
    Appointment:
      type: object
      properties:
        id:
          type: string
          format: uuid
        patientId:
          type: string
          format: uuid
        slotId:
          type: string
          format: uuid
        patientName:
          type: string
        reservedAt:
          type: string
          format: date
        status:
          type: string
    BookAppointmentRequest:
      required:
      - patientId
      - patientName
      - slotId
      type: object
      properties:
        patientId:
          type: string
          format: uuid
        patientName:
          type: string
        slotId:
          type: string
          format: uuid
    SlotDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        doctorName:
          type: string
        isReserved:
          type: boolean
        dateTime:
          type: string
        cost:
          type: number
          format: double
